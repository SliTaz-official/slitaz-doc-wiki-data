====== Ferramentas do Sistema ======

===== Dispositivos e acesso a discos =====

Com o Linux, os discos e as mídias USB são considerados dispositivos. Para acessá-los é necessário montá-los num ponto de montagem (um diretório). No SliTaz, os dispositivos podem ser montados através de uma interface gráfica, usando o mountbox, ou através da linha de comandos. Para montar a primeira partição de um disco rígido em ///mnt/disk//:

<code># mkdir -p /mnt/disk
# mount /dev/hda1 /mnt/disk
</code>

Para montar um CD-ROM ou uma mídia USB devem ser usados pontos de montagem localizados em ///media//. Note que, para um CD-ROM, basta especificar o caminho do dispositivo e que também já existe um ponto de montagem para um disco USB:

<code># mount /dev/cdrom
# mount /dev/sda1 /media/flash
</code>

==== Sistema de Arquivos ntfs ====

Caso seja necessário acesso de leitura e escrita em um sistema de arquivos ntfs do Windows deve-se instalar pacotes adicionais a partir do mirror. O driver //ntfs-3g// permite um acesso estável a partições NTFS e o pacote //ntfsprogs// fornece ferramentas de manipulação que dependem do //fuse//. Note que as partições NTFS podem ser formatadas, movidas ou redimensionadas em modo gráfico com o programa Gparted.

===== Usuários, grupos e passwords =====

Para gerenciar usuários e grupos no SliTaz é necessário usar a linha de comando, mas as permissões dos arquivos podem ser alteradas em modo gráfico com o gerenciador de arquivos emelFM2. Para adicionar ou remover usuários e grupos, é necessário estar logado como root (administrador). O super usuário root pode também alterar todas as senhas de usuários, enquanto um usuário comum pode apenas alterar a sua própria senha. Para adicionar ou remover um usuário chamado //linux//:

<code># adduser linux
# deluser linux
</code>

Para adicionar ou remover um grupo, deve usar-se //addgroup// ou //delgroup//. Para alterar a senha do usuário atual ou a de um usuário específico, deve-se usar o comando //passwd//:

<code>$ passwd
# passwd username
</code>

==== Grupo 'audio' ====

Para que um novo usuário possa ouvir música ou arquivos de áudio, ele deve pertencer ao grupo //audio//. Para adicionar um usuário ao grupo //audio//:

<code># adduser -G audio user_name</code>

===== Linguagem e layout de teclado =====

O SliTaz armazena a configuração da localização geográfica em ///etc/locale.conf//, arquivo que é lido por ///etc/profile// a cada login, e a configuração do teclado é armazenada em ///etc/kmap.conf//. Estes dois arquivos podem ser editados com o editor de texto de sua preferência ou então configurados, respectivamente, com os comandos //tazlocale// e //tazkmap//. As configurações que você escolheu no primeiro boot podem ser alteradas digitando, root (administrador):

<code># tazlocale</code>

Ou:

<code># tazkmap</code>

Para listar todas as localizações geográficas disponíveis ou a sua configuração atual pode ser usado o comando locale, tanto como usuário comum quanto como root:

<code>$ locale -a
$ locale
</code>

===== Shell Bash =====

No SliTaz estão disponíveis os shells //ash// e //sh// com uma ligação para Ash, que é o shell fornecido pelo Busybox. Caso pretenda usar o Bash (Bourne Again SHell), deverá primeiro instalar o pacote //bash// como root, copiar o arquivo //.profile// localizado na pasta home e renomeá-lo para //.bashrc// e, então, editar o arquivo ///etc/passwd// com o editor de sua preferência e mudar o shell para ///:bin/bash//.

<code># tazpkg get-install bash
# cp /home/hacker/.profile home/hacker/.bashrc
# Note root user: cp /home/hacker/.profile ~/.bashrc
# nano /etc/passwd   # :/bin/bash
</code>

No primeiro login posterior a estas operações o shell padrão será o bash, o que pode ser confirmado teclando //env// na linha de comando.

===== Editores de Texto =====

O Busybox fornece um clone do //vi// para a edição corriqueira de texto, mas esse editor possui limitações. Pode-se instalar o editor //vim// completo com o comando:

<code># tazpkg get-install vim</code>

Ou, alternativamente, pode-se instalar uma versão mais leve do Emacs, oferecida pelo SliTaz

<code># tazpkg get-install emacs</code>

===== Sudo =====

O comando sudo pode ser usado no SliTaz:

<code># tazpkg get-install sudo</code>

Note que o arquivo de configuração ///etc/sudoers// deve sempre ser editado pelo comando //visudo//, como root, o qual 'tranca' o arquivo e checa por erros.

===== Relógio do Sistema =====

Para saber a hora e data atuais do sistema, basta teclar //date//. No SliTaz, o arquivo de configuração do fuso horário está armazenado em ///etc/TZ// e pode ser editado com o editor de texto de sua preferência ou pode-se, simplesmente, utilizar o comando //echo// para efetuar as alterações. Podem consultar-se os fusos horários disponíveis na pasta ///usr/share/zoneinfo//. Eis um exemplo, usando o fuso horário Europe/London (Europa/Londres):

<code># echo "Europe/London" > /etc/TZ</code>

==== Rdate ====

Para sincronizar o relógio do sistema com um servidor NTS (network time server), pode-se usar, como root, o comando //rdate -s//:

<code># rdate -s tick.greyware.com</code>

Para exibir a hora no servidor remoto, deve-se usar o comando //rdate -p//:

<code>$ rdate -p tick.greyware.com</code>

==== Hwclock ====

O comando //hwclock// permite sincronizar a hora do relógio de hardware com o do sistema e vice-versa. Para sincronizar o relógio do sistema com o do hardware ( --utc = hora universal, -l = hora local):

<code># hwclock -w --utc</code>

Para sincronizar o relógio do hardware com o do sistema:

<code># hwclock -s --utc</code>

===== Agendar a execução de comandos =====

O daemon 'crond' permite executar comandos automaticamente, agendando-os para um dia ou hora específicos. Isto pode ser de grande utilidade para tarefas de rotina, como é o caso da administração do sistema. A pasta usada pelo cron é ///var/spool/cron/crontabs//.

Cada utilizador do sistema pode ter as suas tarefas agendadas; estas são definidas no arquivo ///var/spool/cron/crontabs/user//. O utilitário //crontab// permite, entre outras funções, mostrar uma lista das tarefas de um utilizador específico. A sintaxe dos arquivos é a seguinte:

<code>mm hh dd MMM DDD command > log</code>

Como exemplo, iremos criar um arquivo com privilégios de administrador root e testar o daemon 'crond' com uma tarefa que será executada uma vez por minuto - escrever a data num arquivo chamado ///tmp/crond.test//. Note que este utilitário possui uma opção, crontab, que permite editar o arquivo cron usando o editor 'vi', que não é fornecido com o SliTaz. Em vez deste, pode-se usar o GNU nano (teclando <Ctrl+X> para gravar e sair do programa):

<code># nano /var/spool/cron/crontabs/root
* * * * * date >> /tmp/crond.test
</code>

Executar o crond com a opção //-b// (background), configurada a partir de ///etc/daemons.conf// e usando o script de inicialização:

<code># /etc/init.d/crond start</code>

Você pode agora aguardar alguns minutos e, em seguida, ver o conteúdo do arquivo ///tmp/crond.test//:

<code># cat /tmp/crond.test</code>

Para parar ou reiniciar o daemon crond:

<code># /etc/init.d/crond stop</code>

Ou:

<code># /etc/init.d/crond restart</code>

==== Executar o daemon crond a cada boot ====

Para executar o daemon 'crond' a cada boot do sistema, basta acrescentá-lo à variável START_DAEMONS no arquivo de configuração ///etc/rcS.conf//, quer antes quer depois do servidor web ou do servidor SSH.

===== Acrescentar comandos para execução durante o boot =====

Durante o processo de boot são executados alguns scripts que permitem configurar diversos serviços, caso da inicialização do servidor web, da rede, etc. No SliTaz, o script ///etc/init.d/local.sh// permite que sejam adicionados comandos que se pretendam executar durante a inicialização do sistema. Pode-se também criar novos scripts em ///etc/init.d//, ligações a estes em ///etc/rc.scripts// para scripts shell e, ainda, usar o arquivo ///etc/rc.d// para links ao daemon/script de inicialização em ///etc/rcS.conf//:

<code># nano /etc/init.d/local.sh</code>