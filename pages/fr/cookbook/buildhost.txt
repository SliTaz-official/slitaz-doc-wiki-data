====== SliTaz Build Host (tank) ======

Informations et guides pour construire l'hôte SliTaz.

===== Dossiers dans : /home/slitaz =====

    * cooking/ - Chroot cooking et saveurs
    * stable/ - Arborescence version Stable.
    * repos/ - Tous les répertoires du projet (où les commit sont poussés). 
    * www/ - Les hôtes virtuels (site web, hg, boot, people, etc).

===== Utilisation de tazdev =====

Pour aider à maintenir le miroir, les saveurs et d'autres services, la commande tazdev est utilisée. Elle est principalement conçue pour la version cooking. Utilisation :

<code>
 $ tazdev usage
</code>

===== Création de paquets indigestes =====

Vous pouvez utiliser le wok indigeste dans un environnement chrooté pour créer des paquets non-supportés. Si vous maintenez les paquets officiels et que vous réussissez à les cuire, testez-les sur votre machine puis vous pourrez les soumettre sur le wok officiel. Les mainteneurs du miroir vont ensuite reconstruire et uploader les paquets sur mirror.slitaz.org.

Pour construire des paquets dans le wok undigest dans l'environnement chroot: les commandes valent parfois mieux qu'un long discours:

<code>
 $ ln -s /home/slitaz/cooking/chroot/home/undigest .
</code>

Vous pouvez copier les fichiers avec gFTP-sftp-scp directement dans le wok ou à partir du répertoire courant: 

<code>
 $ cp -a package undigest/wok
 $ su -c "tazdev chroot"
 # cd home/undigest
 # tazwok cook package
 # exit
 $ ls undigest/packages
</code>

===== Cuisiner les paquets officiels =====

Les mainteneurs ont un accès root et certains ont accès en écriture au miroir principal à mirror.slitaz.org, si vous voulez aider dans cette tâche s'il vous plaît contacter l'un des développeurs actifs (voir dans le dépôt Hg).

Tout est à faire cuire dans un environnement de chroot, le chemin de défaut pour le wok de construction est CHROOT/home/slitaz/wok. Quelques changements peuvent être faits directement dans ce wok: le Hg réel est copié dans le chroot par tazbb (Build Bot). Pour chroot dans la version cooking:

<code>
 # tazdev chroot
</code>

Faites cuire tous les derniers paquets commis ou faites tout cuire avec 'cook-all', notez que la comparaison n'est pas nécessaire si vous savez quels paquets faire cuire. Si vous voulez forcer la cuisson de certains paquets par tazbb, vous pouvez les nettoyer avec tazwok. Par défaut, tazbb fait cuire seulement le dernier commit:

<code>
 # tazbb cook-commit
</code>

Si nécessaire (tazbb fait ceci automatiquement), vous pouvez enlever tous les vieux paquets et puis reconstruire les listes manuellement :

<code>
 # tazbb clean-up
 # tazwok gen-list --text
 # exit
</code>

Si vous avez accès en écriture au miroir, vous pouvez faire un dry-push pour vérifier et ensuite télécharger les paquets; push va également supprimer tout les anciens paquets sur le miroir.


===== Paquets Stable =====

Les paquets de la version Stable sont également construits dans un environnement chroot comme les paquets de Cooking:

<code>
 # tazdev chroot stable
</code>

===== Télécharger manuellement sur mirror.slitaz.org =====

Les responsables de miroirs peuvent télécharger à la main avec tazdev (-dp pour a dry push):

<code>
 # tazdev -p $USER
</code>

===== Mise à jour du site web à la main ======

Le Site et l'interface web des paquets sont mis à jour tous les soirs par cron et peuvent également être mises à jour à la main (utilisé le jour de la diffusion d'une nouvelle version par exemple):

<code>
 # tazdev update-www
</code>