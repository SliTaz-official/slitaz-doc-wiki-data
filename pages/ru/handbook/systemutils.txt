======Системное администрирование======


=====Оборудование и доступ к диску=====

В Linux ваши диски и USB-носители рассматриваются как устройства. Для доступа к ним необходимо сначала подключить их к точке монтирования, представленной тем или иным каталогом. В SliTaz можно монтировать устройства с помощью графического интерфейса mountbox или в командной строке. Чтобы смонтировать первый диск на локальном жестком диске в /mnt/disk:

<code>
# mkdir -p /mnt/disk
# mount /dev/hda1 /mnt/disk
</code>

Чтобы смонтировать компакт-диск или USB-накопитель, необходимо использовать точки монтирования, находящиеся в каталоге ///media//. Заметим, что для компакт-диска, вы просто должны указать путь к устройству. Для флеш-устройств, точка монтирования уже определена как ///media/flash//:

<code>
# mount /dev/cdrom
# mount /dev/sda1 /media/flash
</code>


===Файловая система NTFS===

Если вам нужно читать/писать информацию с раздела с файловой системой NTFS, необходимо установить несколько дополнительных пакетов с зеркала. Драйвер NTFS-3G обеспечивает стабильный доступ к NTFS-разделам, а ntfsprogs предоставляет различные инструменты для манипуляций с разделом. Обратите внимание, что вы можете форматировать, перемещать и изменять размеры разделов NTFS графически, с помощью Gparted.


=====Пользователи, группы и пароли=====

Чтобы управлять пользователями и группами в операционной системе  SliTaz, необходимо использовать командную строку, а права доступа к файлам можно изменять через графический интерфейс файлового менеджера PCManFM. Чтобы добавить или удалить пользователей и группы, вы должны быть суперпользователем (администратором). Администратор может изменить пароли всех пользователей, а каждый пользователь в отдельности может изменить только свой собственный пароль. Добавлению или удалению пользователя с именем User соответствуют команды:

<code>
# adduser User
# deluser User
</code>

Чтобы добавить или удалить группу пользователей, используйте команды //addgroup// или //delgroup//. Чтобы изменить текущий пароль или изменить пароль для конкретного пользователя воспользуйтесь командой //passwd//:

<code>
$ passwd
# passwd User
</code>

В первом случае вы поменяете свой собственный пароль, во втором — администратор меняет пароль пользователя User.


===Группа audio===

Если вы добавляете новых пользователей, и хотите, чтобы они имели возможность слушать музыку они должены быть в группе audio. Чтобы добавить существующего пользователя в группу audio, наберите 

<code># adduser -G audio user_name</code>


=====Языки и раскладки клавиатуры=====

SliTaz сохраняет конфигурацию локали по умолчанию в ///etc/locale.conf//, которая считывается файлом ///etc/profile// при каждом входе в систему. А настройки клавиатуры хранятся в ///etc/kmap.conf//. Эти два файла можно редактировать в своем любимом редакторе или настроить соответственно через //tazlocale// и //tazkeymap//. Вы можете изменить настройки, которые вы выбрали при первой загрузке, введя от имени root:

<code># tazlocale</code>

или:

<code># tazkeymap</code>

Для проверки всех доступных языков или просмотра текущей конфигурации, вы можете использовать команду //locale// как обычный  пользователь или администратор:

<code>
$ locale -a
$ locale
</code>


=====Bash Shell=====

В SliTaz в качестве командных оболочек используются ash и sh (со ссылкой на Ash), входящие в состав BusyBox. Если вы хотите использовать Bash (Bourne Again Shell), сначала установите его, затем сделайте копию файла //.profile//, расположенного в вашей домашней папке, и переименуйте его в //.bashrc//, затем отредактируйте в своем любимом редакторе файл ///etc/passwd// и измените путь к командной строке на ///bin/bash//:

<code>
# tazpkg get-install bash
# cp /home/User/.profile home/User/.bashrc
# nano /etc/passwd   ~ :/bin/bash
</code>

При следующем входе в систему bash будет оболочкой по умолчанию. Убедитьтся в этом вы сможете, введя команду //env// в терминале.


=====Редакторы=====

В состав Busybox входит клон VI для нормального редактирования текста, но он имеет свои ограничения. Вы можете установить полный редактор Vim с помощью команды:

<code># tazpkg get-install vim</code>

Или же, если вы предпочитаете Emacs, SliTaz предлагает и его крошечную версию:

<code># tazpkg get-install emacs</code>


=====Sudo=====

Команда //sudo// может быть применена в SliTaz:

<code># tazpkg get-install sudo</code>

Обратите внимание, что конфигурационный файл ///etc/sudoers// всегда должен быть отредактирован командой //visudo//, которая блокирует файл и проверяет его на наличие ошибок.


=====Системное время=====

Чтобы узнать текущее системное время, вы можете просто ввести команду //date//. В SliTaz часовой пояс сохраняется в файл конфигурации ///etc/TZ//, вы можете редактировать его в своем любимом текстовом редакторе или просто произвести изменения командой //echo//. Для просмотра доступных часовых поясов, вы можете посмотреть в каталоге ///usr/share/zoneinfo//. Вот пример использования часового пояса Europe/London:

<code># echo "Europe/London" > /etc/TZ</code>


===Rdate===

Чтобы синхронизировать ваше системное время с time-сервером, вы можете от имени суперпользователя использовать команду //rdate -s//:

<code># rdate -s tick.greyware.com</code>

Чтобы просмотреть время удаленного time-сервера, введите команду //rdate -p//:

<code>$ rdate -p tick.greyware.com</code>


===Hwclock===

//Hwclock// позволяет синхронизировать ваши аппаратные часы с системными часами и наоборот.

Синхронизировать системные часы с аппаратными часами (--utc = UTC по всемирному времени,--L = время местное):

<code># hwclock -w --utc</code>

Синхронизировать аппаратные часы с системными часами:

<code># hwclock -s --utc</code>


=====Выполнение команд по расписанию=====

Демон //crond// позволяет автоматически выполнять команды, запланированные на определенную дату и время. Это очень полезно для рутинных задач. Каталог этого демона: ///var/spool/cron/crontabs//.

Каждый пользователь может назначать свои собственные задачи, которые нужно определить в файле: ///var/spool/cron/crontabs/user//. Утилита //crontab// позволяет выполнять задачи, специфичные для каждого пользователя. Синтаксис файлов выглядит следующим образом:

<file>mm hh dd MMM DDD command > log</file>

Создадим файл с привилегиями суперпользователя и проверим работу демона //crond//. Каждую минуту демон должен записывать текущее системное время в файл ///tmp/crond.test//. Следует отметить, что утилита имеет опцию //crontab//, доступную для редактирования с помощью редактора //vi//, это не предусмотрено в SliTaz по умолчанию. Но в данном случае мы можем использовать GNU Nano (<Ctrl+X> для сохранения и выхода):

<code># nano /var/spool/cron/crontabs/root</code>

Добавьте строку:

<file>* * * * * date >> /tmp/crond.test</file>

Запустите //crond// с опцией //-b// (background — фоновый режим), настроеный через файл ///etc/daemons.conf// и используйте скрипт для запуска: 

<code># /etc/init.d/crond start</code>

Можете подождать несколько минут и посмотреть содержимое файла ///tmp/crond.test//:

<code># cat /tmp/crond.test</code>

Для остановки и перезапуска демона используйте команды

<code># /etc/init.d/crond stop</code>

или:

<code># /etc/init.d/crond restart</code>


===Запуск crond при каждой загрузке системы===

Для запуска демона //crond// каждый раз при загрузке системы, просто добавьте его в переменную START_DAEMONS в конфигурационный файл ///etc/rcS.conf// либо до, либо после web server или SSH server.


=====Команды, которые должны выполняться при загрузке=====

В процессе загрузки, различные сценарии выполняют различные настройки, одни запускают серверы, другие — настраивают сеть и т.д. В SliTaz есть скрипт ///etc/init.d/local.sh//, он позволяет добавить команды, которые будут выполнены при старте системы. Вы также можете создавать новые скрипты в ///etc/init.d//, ссылки на них в ///etc/rc.scripts// и использовать ///etc/rc.d// для указания ссылок на скрипт запуска демонов ///etc/rcS.conf//:

<code># nano /etc/init.d/local.sh</code>

----
Статью перевел [[http://forum.slitaz.org/index.php/profile/1300/Onion|Onion]]
